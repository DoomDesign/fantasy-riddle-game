/* You can add global styles to this file, and also import other style files */
@import '~modern-normalize/modern-normalize.css';

* {
	// outline: 1px solid rgba(red, .3);
}

@mixin center-contents {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 1fr;
	place-items: center;
}

.container {
	width: 100vw;
	height: 100vh;
	padding: 2rem;

	background: url(assets/img/screen-bg.jpg) center center no-repeat;
	background-size: cover;

	position: relative;

	@include center-contents();

	.lightmap-overlay {
		position: absolute;
		z-index: 9999;
		pointer-events: none;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: url(assets/img/lightmap.jpg) center center no-repeat;
		background-size: cover;

		mix-blend-mode: overlay;
	}

	.game-controller {
		position: fixed;
		top: 0;
		left: 0;
	}
}

.game {
	aspect-ratio: 1;
	height: 100%;
	// background-color: black;

	position: relative;

	@include center-contents();
}

.outer_circle {
	// background-color: darkgray;
	width: 100%;
	height: 100%;

	position: relative;

	background:  url(assets/img/rings.png) center center no-repeat;
	background-size: 88%;

	@include center-contents();

	> .position {

		--translate-x: 0;
		--translate-y: 0;

		transform: translateX(var(--translate-x)) translateY(var(--translate-y));

		&-1 {
			top: 0;
			left: 50%;
			--translate-x: -50%;
		}
		&-3 {
			top: 50%;
			right: 0;
			--translate-y: -50%;
		}
		&-5 {
			bottom: 0;
			left: 50%;
			--translate-x: -50%;
		}
		&-7 {
			top: 50%;
			left: 0;
			--translate-y: -50%;
		}
	}
}

.inner_circle {
	--inner-circle-size: 64%;
	width: var(--inner-circle-size);
	height: var(--inner-circle-size);

	position: relative;

	@include center-contents();

	.circle,
	.positions-circle,
	.circle-lightoverlay {
		position: absolute;
		top: 0;
		left: 0;

		width: 100%;
		height: 100%;


		transform: rotate(var(--turn-degree));

	}

	.circle-lightoverlay {
		border-radius: 100vmax;

		box-shadow: inset 0px 6px 3px 0px rgba(white, .16),
					inset 0px -10px 5px 0px rgba(black, .6);

		z-index: 100;
		pointer-events: none;
	}
	.circle {
		transition: all var(--turn-speed-seconds);
		border-radius: 100vmax;

		background: url(assets/img/center-disc.png);
		background-size: 100%;

		// border: 3px dotted black;
		// background: linear-gradient(to bottom, red, black);

		// background: url(https://source.unsplash.com/random) center center;
		// background-size: cover;
	}

	.positions-circle {
		z-index: 100;


		&.isTurning {
			transition: all var(--turn-speed-seconds);
		}
	}

	.position {
		// transition: all var(--pos-turn-speed-seconds);
		transform: rotate(var(--pos-turn-degree));

		&.isTurning {
			transition: all var(--turn-speed-seconds);
		}

		--position-circle-offset: 5.5%;

		&-8 {
			top: var(--position-circle-offset);
			left: var(--position-circle-offset);
		}
		&-2 {
			top: var(--position-circle-offset);
			right: var(--position-circle-offset);
		}
		&-4 {
			bottom: var(--position-circle-offset);
			right: var(--position-circle-offset);
		}
		&-6 {
			bottom: var(--position-circle-offset);
			left: var(--position-circle-offset);
		}
	}
}

.position {
	cursor: pointer;
	position: absolute;
	// background-color: blue;
	background: url(assets/img/position-circle-bg.png) center center no-repeat;
	background-size: 100%;

	border: 0;

	width: 7vw;
	aspect-ratio: 1;
	border-radius: 100vmax;

	@include center-contents();

	overflow: hidden;
	// font-size: 2vw;
	color: #fff;

	text-align: center;
	line-height: 1;

	transition: background-color .5s, box-shadow .5s;

	&:hover,
	&.isSelected {
		&:not(.error) {
			box-shadow:
						inset 0px 0px 1px 1px white,
						inset 0px 0px 20px aqua,
						0px 0px 1px 1px white,
						0px 0px 20px aqua,
						0px 0px 50px darkblue
						;
		}
	}

	&.error {
		transition: background-color .25s, box-shadow .25s;
		box-shadow:
					inset 0px 0px 1px 1px orange,
					inset 0px 0px 20px red,
					0px 0px 1px 1px orange,
					0px 0px 20px red,
					0px 0px 50px darkred
					;
	}

	&.isPossible {
		&:not(:hover) {
			animation: markPossible 5s infinite;
			animation-timing-function: linear;

		}

	}

	span {
		font-size: 1rem;
	}

	span.debug {
		font-size: 1vw;
		position: absolute;
		opacity: .5;
		background-color: white;
		border-radius: 100vmax;
		overflow: hidden;
		width: 1.5vw;
		height: 1.5vw;
		display: grid;
		place-content: center;
		top: 0;
		left: 50%;
		color: black;
		transform: translateX(-50%);

		// display: none;
	}
}

.circle-controller {
	position: absolute;

	z-index: 1000;

}

@keyframes markPossible {

	0%, 100% {
		box-shadow:
		inset 0px 0px 5px 1px rgba(dodgerblue, 0),
		inset 0px 0px 30px rgba(darkblue, 0),
		0px 0px 10px 0px rgba(dodgerblue, 0),
		0px 0px 40px rgba(darkblue, 0),
					// 0px 0px 50px 30px transparent
					;
	}
	50% {
		box-shadow:
					inset 0px 0px 5px 1px rgba(dodgerblue, .6),
					inset 0px 0px 30px rgba(darkblue, .6),
					0px 0px 10px 0px rgba(dodgerblue, .6),
					0px 0px 40px rgba(darkblue, .6),
					// 0px 0px 50px darkblue
					;
	}
}